{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nconst useFetchData = function (url) {\n  _s();\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    body: {},\n    query: {},\n    method: \"GET\"\n  };\n  const [refetch, setRefetch] = React.useState(true);\n  const [data, setData] = React.useState({\n    response: null,\n    error: false,\n    loading: true\n  });\n  React.useEffect(() => {\n    if (refetch) {\n      setRefetch(false);\n      setData({\n        ...data,\n        error: null,\n        loading: true\n      });\n      fetch(url, {\n        method: options.method,\n        headers: options.headers || {\n          \"Content-Type\": \"application/json\"\n        },\n        body: options.method !== \"GET\" ? JSON.stringify(options.body) : undefined\n      }).then(response => response.json()).then(data => {\n        setData({\n          response: data,\n          error: false,\n          loading: false\n        });\n      }).catch(error => {\n        //fetch throws an error only on network failure or if anything prevented the request from completing\n        setData({\n          response: {\n            status: \"network_failure\",\n            error\n          },\n          error: true,\n          loading: false\n        });\n      });\n    }\n  }, [data, options.body, options.headers, options.method, options.query, url, refetch]);\n  return {\n    ...data,\n    refetch: () => setRefetch(true)\n  };\n};\n_s(useFetchData, \"9Mn87sUeo5U40vVpw9ZIyDO5YFo=\");\nexport default useFetchData;","map":{"version":3,"names":["React","useFetchData","url","_s","options","arguments","length","undefined","body","query","method","refetch","setRefetch","useState","data","setData","response","error","loading","useEffect","fetch","headers","JSON","stringify","then","json","catch","status"],"sources":["/Users/shashanksurabhi/Desktop/sample-react-proj/src/components/hooks/useFetchData.js"],"sourcesContent":["import React from \"react\";\n\nconst useFetchData = (\n  url,\n  options = {\n    body: {},\n    query: {},\n    method: \"GET\",\n  }\n) => {\n  const [refetch, setRefetch] = React.useState(true);\n  const [data, setData] = React.useState({\n    response: null,\n    error: false,\n    loading: true,\n  });\n\n  React.useEffect(() => {\n    if (refetch) {\n      setRefetch(false);\n      setData({ ...data, error: null, loading: true });\n      fetch(url, {\n        method: options.method,\n        headers: options.headers || {\n          \"Content-Type\": \"application/json\",\n        },\n        body:\n          options.method !== \"GET\" ? JSON.stringify(options.body) : undefined,\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          setData({\n            response: data,\n            error: false,\n            loading: false,\n          });\n        })\n        .catch((error) => {\n          //fetch throws an error only on network failure or if anything prevented the request from completing\n          setData({\n            response: { status: \"network_failure\", error },\n            error: true,\n            loading: false,\n          });\n        });\n    }\n  }, [\n    data,\n    options.body,\n    options.headers,\n    options.method,\n    options.query,\n    url,\n    refetch,\n  ]);\n\n  return { ...data, refetch: () => setRefetch(true) };\n};\n\nexport default useFetchData;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,SAAAA,CACnBC,GAAG,EAMA;EAAAC,EAAA;EAAA,IALHC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG;IACRG,IAAI,EAAE,CAAC,CAAC;IACRC,KAAK,EAAE,CAAC,CAAC;IACTC,MAAM,EAAE;EACV,CAAC;EAED,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,KAAK,CAACa,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,KAAK,CAACa,QAAQ,CAAC;IACrCG,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAE,KAAK;IACZC,OAAO,EAAE;EACX,CAAC,CAAC;EAEFlB,KAAK,CAACmB,SAAS,CAAC,MAAM;IACpB,IAAIR,OAAO,EAAE;MACXC,UAAU,CAAC,KAAK,CAAC;MACjBG,OAAO,CAAC;QAAE,GAAGD,IAAI;QAAEG,KAAK,EAAE,IAAI;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC;MAChDE,KAAK,CAAClB,GAAG,EAAE;QACTQ,MAAM,EAAEN,OAAO,CAACM,MAAM;QACtBW,OAAO,EAAEjB,OAAO,CAACiB,OAAO,IAAI;UAC1B,cAAc,EAAE;QAClB,CAAC;QACDb,IAAI,EACFJ,OAAO,CAACM,MAAM,KAAK,KAAK,GAAGY,IAAI,CAACC,SAAS,CAACnB,OAAO,CAACI,IAAI,CAAC,GAAGD;MAC9D,CAAC,CAAC,CACCiB,IAAI,CAAER,QAAQ,IAAKA,QAAQ,CAACS,IAAI,EAAE,CAAC,CACnCD,IAAI,CAAEV,IAAI,IAAK;QACdC,OAAO,CAAC;UACNC,QAAQ,EAAEF,IAAI;UACdG,KAAK,EAAE,KAAK;UACZC,OAAO,EAAE;QACX,CAAC,CAAC;MACJ,CAAC,CAAC,CACDQ,KAAK,CAAET,KAAK,IAAK;QAChB;QACAF,OAAO,CAAC;UACNC,QAAQ,EAAE;YAAEW,MAAM,EAAE,iBAAiB;YAAEV;UAAM,CAAC;UAC9CA,KAAK,EAAE,IAAI;UACXC,OAAO,EAAE;QACX,CAAC,CAAC;MACJ,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CACDJ,IAAI,EACJV,OAAO,CAACI,IAAI,EACZJ,OAAO,CAACiB,OAAO,EACfjB,OAAO,CAACM,MAAM,EACdN,OAAO,CAACK,KAAK,EACbP,GAAG,EACHS,OAAO,CACR,CAAC;EAEF,OAAO;IAAE,GAAGG,IAAI;IAAEH,OAAO,EAAEA,CAAA,KAAMC,UAAU,CAAC,IAAI;EAAE,CAAC;AACrD,CAAC;AAACT,EAAA,CAvDIF,YAAY;AAyDlB,eAAeA,YAAY"},"metadata":{},"sourceType":"module"}